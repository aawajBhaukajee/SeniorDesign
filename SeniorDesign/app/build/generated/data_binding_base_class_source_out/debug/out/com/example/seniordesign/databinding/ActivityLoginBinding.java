// Generated by view binder compiler. Do not edit!
package com.example.seniordesign.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.seniordesign.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView appTitle;

  @NonNull
  public final EditText eAddress;

  @NonNull
  public final TextView forgotPassword;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final TextView newAccount;

  @NonNull
  public final EditText pWord;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull TextView appTitle,
      @NonNull EditText eAddress, @NonNull TextView forgotPassword, @NonNull Button loginButton,
      @NonNull TextView newAccount, @NonNull EditText pWord) {
    this.rootView = rootView;
    this.appTitle = appTitle;
    this.eAddress = eAddress;
    this.forgotPassword = forgotPassword;
    this.loginButton = loginButton;
    this.newAccount = newAccount;
    this.pWord = pWord;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appTitle;
      TextView appTitle = rootView.findViewById(id);
      if (appTitle == null) {
        break missingId;
      }

      id = R.id.eAddress;
      EditText eAddress = rootView.findViewById(id);
      if (eAddress == null) {
        break missingId;
      }

      id = R.id.forgotPassword;
      TextView forgotPassword = rootView.findViewById(id);
      if (forgotPassword == null) {
        break missingId;
      }

      id = R.id.loginButton;
      Button loginButton = rootView.findViewById(id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.newAccount;
      TextView newAccount = rootView.findViewById(id);
      if (newAccount == null) {
        break missingId;
      }

      id = R.id.pWord;
      EditText pWord = rootView.findViewById(id);
      if (pWord == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, appTitle, eAddress,
          forgotPassword, loginButton, newAccount, pWord);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
